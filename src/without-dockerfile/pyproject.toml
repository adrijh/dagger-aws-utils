[project]
name = "f_without_dockerfile"
authors = [
    {name = "Adrian Jimenez"}
]
description = "Sample lambda without Dockerfile"
readme = "README.md"
requires-python = ">=3.11"
version = "0.0.1"
dependencies = []


[project.optional-dependencies]
dev = [
    "ruff",
    "mypy",
]

[tool.setuptools.packages]
find = {}

[tool.mypy]
disallow_untyped_defs = false
disallow_untyped_calls = false
disallow_incomplete_defs = false
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
warn_no_return = false
warn_unused_ignores = true
python_version = "3.12"
strict = true
exclude = [
    '^setup\.py$',
    "venv",
]

[[tool.mypy.overrides]]
module = [
    "setuptools",
    "awsglue.*",
    "dataclasses_json",
    "pyspark.*",
    "awsgluedq.*",
]
ignore_missing_imports = true

[tool.ruff]
lint.mccabe.max-complexity = 15
select = [
    "E",    # pycodestyle
    "W",    # pycodestyle
    "F",    # pyflake
    "I",    # isort
    "S",    # flake8-bandit
    "B",    # flake8-bugbear
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "D",    # pydocstyle
    "RUF",  # Ruff specific rules
]

exclude = [
    ".git",
    ".idea",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".tox",
    ".venv",
    "venv",
    "build",
    "assets",
    "docs/",
]

ignore = [
    "D100",     # Missing docstring in public module
    "D101",     # Missing docstring in public class
    "D102",     # Missing docstring in public method
    "D103",     # Missing docstring in public function
    "D107",     # Missing docstring in __init__
    "D203",     # no-blank-line-before-class (conflict with D211)
    "D213",     # multi-line-summary-second-line (conflict with D212)
    "S608",     # SQL Injection - Should be enabled at some point?
]

line-length = 120

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true

[tool.ruff.per-file-ignores]
"__init__.py" = ["D104"]
"tests/*" = ["S", "D"]

[tool.ruff.isort]
combine-as-imports = true
force-wrap-aliases = true
